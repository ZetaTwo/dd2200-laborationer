%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Microsoft Windows 8.
%%Title: F:\Dropbox\Skola\kth\os\labbar\labb3\results\comparison.eps
%%CreationDate: 05/12/2014  02:49:02
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 3082 3910 0 0 -3082 656 3366 4 MP
PP
-3910 0 0 3082 3910 0 0 -3082 656 3366 5 MP stroke
4 w
DO
SO
6 w
0 sg
 656 3366 mt 4566 3366 L
 656 3366 mt  656  284 L
 656 3366 mt  656 3326 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 553 3511 mt 
(-2) s
1144 3366 mt 1144 3326 L
1111 3511 mt 
(0) s
1633 3366 mt 1633 3326 L
1600 3511 mt 
(2) s
2122 3366 mt 2122 3326 L
2089 3511 mt 
(4) s
2611 3366 mt 2611 3326 L
2578 3511 mt 
(6) s
3099 3366 mt 3099 3326 L
3066 3511 mt 
(8) s
3588 3366 mt 3588 3326 L
3522 3511 mt 
(10) s
4077 3366 mt 4077 3326 L
4011 3511 mt 
(12) s
4566 3366 mt 4566 3326 L
4500 3511 mt 
(14) s
 656 3366 mt  695 3366 L
 488 3410 mt 
(10) s
 656 3023 mt  695 3023 L
 388 3067 mt 
(10.5) s
 656 2681 mt  695 2681 L
 488 2725 mt 
(11) s
 656 2338 mt  695 2338 L
 388 2382 mt 
(11.5) s
 656 1996 mt  695 1996 L
 488 2040 mt 
(12) s
 656 1653 mt  695 1653 L
 388 1697 mt 
(12.5) s
 656 1311 mt  695 1311 L
 488 1355 mt 
(13) s
 656  968 mt  695  968 L
 388 1012 mt 
(13.5) s
 656  626 mt  695  626 L
 488  670 mt 
(14) s
 656  284 mt  695  284 L
 388  328 mt 
(14.5) s
gs 656 284 3911 3083 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
0 120 1144 2987 2 MP stroke
68 0 1110 2987 2 MP stroke
68 0 1110 3107 2 MP stroke
0 115 1707 3000 2 MP stroke
68 0 1673 3000 2 MP stroke
68 0 1673 3115 2 MP stroke
0 139 2270 2936 2 MP stroke
67 0 2236 2936 2 MP stroke
67 0 2236 3075 2 MP stroke
0 126 2832 2723 2 MP stroke
67 0 2799 2723 2 MP stroke
67 0 2799 2849 2 MP stroke
0 73 3395 2436 2 MP stroke
68 0 3361 2436 2 MP stroke
68 0 3361 2509 2 MP stroke
0 49 3958 1870 2 MP stroke
67 0 3924 1870 2 MP stroke
67 0 3924 1919 2 MP stroke
0 52 4520 595 2 MP stroke
67 0 4487 595 2 MP stroke
67 0 4487 647 2 MP stroke
562 -1268 563 -586 563 -289 562 -259 563 -26 563 -13 1144 3069 7 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
0 88 1144 3010 2 MP stroke
68 0 1110 3010 2 MP stroke
68 0 1110 3098 2 MP stroke
0 166 1707 2973 2 MP stroke
68 0 1673 2973 2 MP stroke
68 0 1673 3139 2 MP stroke
0 123 2270 2959 2 MP stroke
67 0 2236 2959 2 MP stroke
67 0 2236 3082 2 MP stroke
0 97 2832 2774 2 MP stroke
67 0 2799 2774 2 MP stroke
67 0 2799 2871 2 MP stroke
0 114 3395 2433 2 MP stroke
68 0 3361 2433 2 MP stroke
68 0 3361 2547 2 MP stroke
0 113 3958 1630 2 MP stroke
67 0 3924 1630 2 MP stroke
67 0 3924 1743 2 MP stroke
0 50 4520 299 2 MP stroke
67 0 4487 299 2 MP stroke
67 0 4487 349 2 MP stroke
562 -1358 563 -809 563 -322 562 -209 563 -57 563 30 1144 3056 7 MP stroke
/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
0 149 1144 2988 2 MP stroke
68 0 1110 2988 2 MP stroke
68 0 1110 3137 2 MP stroke
0 127 1707 3015 2 MP stroke
68 0 1673 3015 2 MP stroke
68 0 1673 3142 2 MP stroke
0 160 2270 2981 2 MP stroke
67 0 2236 2981 2 MP stroke
67 0 2236 3141 2 MP stroke
0 87 2832 2904 2 MP stroke
67 0 2799 2904 2 MP stroke
67 0 2799 2991 2 MP stroke
0 110 3395 2721 2 MP stroke
68 0 3361 2721 2 MP stroke
68 0 3361 2831 2 MP stroke
0 59 3958 2530 2 MP stroke
67 0 3924 2530 2 MP stroke
67 0 3924 2589 2 MP stroke
0 47 4520 1713 2 MP stroke
67 0 4487 1713 2 MP stroke
67 0 4487 1760 2 MP stroke
562 -825 563 -230 563 -148 562 -117 563 -22 563 -6 1144 3084 7 MP stroke
gr

c10
0 sg
2154 3654 mt 
(Iterations \(log\(1\)\)) s
 306 2216 mt  -90 rotate
(Time \(log\(ms\)\)) s
90 rotate
1889  189 mt 
(Comparison at 50% realloc) s
 639 3409 mt 
( ) s
4550  326 mt 
( ) s
1 sg
0 546 1485 0 0 -546 2049 1228 4 MP
PP
-1485 0 0 546 1485 0 0 -546 2049 1228 5 MP stroke
4 w
DO
SO
6 w
0 sg
2049  682 mt 3534  682 L
2049 1228 mt 3534 1228 L
3534 1228 mt 3534  682 L
2049 1228 mt 2049  682 L
2049 1228 mt 3534 1228 L
2049 1228 mt 2049  682 L
2049  682 mt 3534  682 L
2049 1228 mt 3534 1228 L
3534 1228 mt 3534  682 L
2049 1228 mt 2049  682 L
2517  829 mt 
(My malloc, first fit) s
gs 2049 682 1486 547 rc
c8
360 0 2121 787 2 MP stroke
gr

c8
0 sg
2517  998 mt 
(My malloc, best fit) s
gs 2049 682 1486 547 rc
c9
360 0 2121 955 2 MP stroke
gr

c9
0 sg
2517 1166 mt 
(Reference malloc) s
gs 2049 682 1486 547 rc
c10
360 0 2121 1123 2 MP stroke
gr

c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
