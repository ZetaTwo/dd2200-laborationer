%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Microsoft Windows 8.
%%Title: F:\Dropbox\Skola\kth\os\labbar\labb3\results\my1.eps
%%CreationDate: 05/12/2014  02:48:46
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   263   507   577
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   263   507   577
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6924 csm

    0     0  5045  3764 rc
88 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3765 rf
6 w
0 3068 3910 0 0 -3068 656 3350 4 MP
PP
-3910 0 0 3068 3910 0 0 -3068 656 3350 5 MP stroke
4 w
DO
SO
6 w
0 sg
 656 3350 mt 4566 3350 L
 656 3350 mt  656  282 L
 656 3350 mt  656 3310 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 553 3495 mt 
(-2) s
1144 3350 mt 1144 3310 L
1111 3495 mt 
(0) s
1633 3350 mt 1633 3310 L
1600 3495 mt 
(2) s
2122 3350 mt 2122 3310 L
2089 3495 mt 
(4) s
2611 3350 mt 2611 3310 L
2578 3495 mt 
(6) s
3099 3350 mt 3099 3310 L
3066 3495 mt 
(8) s
3588 3350 mt 3588 3310 L
3522 3495 mt 
(10) s
4077 3350 mt 4077 3310 L
4011 3495 mt 
(12) s
4566 3350 mt 4566 3310 L
4500 3495 mt 
(14) s
 656 3350 mt  695 3350 L
 488 3394 mt 
(10) s
 656 3009 mt  695 3009 L
 388 3053 mt 
(10.5) s
 656 2668 mt  695 2668 L
 488 2712 mt 
(11) s
 656 2327 mt  695 2327 L
 388 2371 mt 
(11.5) s
 656 1986 mt  695 1986 L
 488 2030 mt 
(12) s
 656 1645 mt  695 1645 L
 388 1689 mt 
(12.5) s
 656 1304 mt  695 1304 L
 488 1348 mt 
(13) s
 656  963 mt  695  963 L
 388 1007 mt 
(13.5) s
 656  622 mt  695  622 L
 488  666 mt 
(14) s
 656  282 mt  695  282 L
 388  326 mt 
(14.5) s
gs 656 282 3911 3069 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
0 121 1144 2980 2 MP stroke
68 0 1110 2980 2 MP stroke
68 0 1110 3101 2 MP stroke
0 148 1707 2938 2 MP stroke
68 0 1673 2938 2 MP stroke
68 0 1673 3086 2 MP stroke
0 183 2270 2894 2 MP stroke
67 0 2236 2894 2 MP stroke
67 0 2236 3077 2 MP stroke
0 128 2832 2685 2 MP stroke
67 0 2799 2685 2 MP stroke
67 0 2799 2813 2 MP stroke
0 139 3395 2505 2 MP stroke
68 0 3361 2505 2 MP stroke
68 0 3361 2644 2 MP stroke
0 87 3958 2119 2 MP stroke
67 0 3924 2119 2 MP stroke
67 0 3924 2206 2 MP stroke
0 60 4520 1027 2 MP stroke
67 0 4487 1027 2 MP stroke
67 0 4487 1087 2 MP stroke
562 -1111 563 -405 563 -194 562 -235 563 -25 563 -2 1144 3039 7 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
0 155 1144 2919 2 MP stroke
68 0 1110 2919 2 MP stroke
68 0 1110 3074 2 MP stroke
0 148 1707 2942 2 MP stroke
68 0 1673 2942 2 MP stroke
68 0 1673 3090 2 MP stroke
0 217 2270 2870 2 MP stroke
67 0 2236 2870 2 MP stroke
67 0 2236 3087 2 MP stroke
0 164 2832 2671 2 MP stroke
67 0 2799 2671 2 MP stroke
67 0 2799 2835 2 MP stroke
0 132 3395 2487 2 MP stroke
68 0 3361 2487 2 MP stroke
68 0 3361 2619 2 MP stroke
0 68 3958 2086 2 MP stroke
67 0 3924 2086 2 MP stroke
67 0 3924 2154 2 MP stroke
0 93 4520 932 2 MP stroke
67 0 4487 932 2 MP stroke
67 0 4487 1025 2 MP stroke
562 -1134 563 -443 563 -189 562 -258 563 -28 563 26 1144 3021 7 MP stroke
/c10 { 0.000000 1.000000 0.000000 sr} bdef
c10
0 174 1144 2978 2 MP stroke
68 0 1110 2978 2 MP stroke
68 0 1110 3152 2 MP stroke
0 93 1707 3032 2 MP stroke
68 0 1673 3032 2 MP stroke
68 0 1673 3125 2 MP stroke
0 138 2270 2966 2 MP stroke
67 0 2236 2966 2 MP stroke
67 0 2236 3104 2 MP stroke
0 89 2832 2776 2 MP stroke
67 0 2799 2776 2 MP stroke
67 0 2799 2865 2 MP stroke
0 89 3395 2516 2 MP stroke
68 0 3361 2516 2 MP stroke
68 0 3361 2605 2 MP stroke
0 95 3958 2059 2 MP stroke
67 0 3924 2059 2 MP stroke
67 0 3924 2154 2 MP stroke
0 35 4520 905 2 MP stroke
67 0 4487 905 2 MP stroke
67 0 4487 940 2 MP stroke
562 -1190 563 -458 563 -247 562 -215 563 -40 563 23 1144 3053 7 MP stroke
/c11 { 1.000000 1.000000 0.000000 sr} bdef
c11
0 119 1144 2993 2 MP stroke
68 0 1110 2993 2 MP stroke
68 0 1110 3112 2 MP stroke
0 103 1707 3016 2 MP stroke
68 0 1673 3016 2 MP stroke
68 0 1673 3119 2 MP stroke
0 177 2270 2917 2 MP stroke
67 0 2236 2917 2 MP stroke
67 0 2236 3094 2 MP stroke
0 82 2832 2790 2 MP stroke
67 0 2799 2790 2 MP stroke
67 0 2799 2872 2 MP stroke
0 74 3395 2513 2 MP stroke
68 0 3361 2513 2 MP stroke
68 0 3361 2587 2 MP stroke
0 77 3958 1979 2 MP stroke
67 0 3924 1979 2 MP stroke
67 0 3924 2056 2 MP stroke
0 89 4520 751 2 MP stroke
67 0 4487 751 2 MP stroke
67 0 4487 840 2 MP stroke
562 -1205 563 -532 563 -285 562 -176 563 -41 563 4 1144 3052 7 MP stroke
0 sg
0 165 1144 2954 2 MP stroke
68 0 1110 2954 2 MP stroke
68 0 1110 3119 2 MP stroke
0 106 1707 3022 2 MP stroke
68 0 1673 3022 2 MP stroke
68 0 1673 3128 2 MP stroke
0 123 2270 2964 2 MP stroke
67 0 2236 2964 2 MP stroke
67 0 2236 3087 2 MP stroke
0 102 2832 2762 2 MP stroke
67 0 2799 2762 2 MP stroke
67 0 2799 2864 2 MP stroke
0 48 3395 2464 2 MP stroke
68 0 3361 2464 2 MP stroke
68 0 3361 2512 2 MP stroke
0 40 3958 1947 2 MP stroke
67 0 3924 1947 2 MP stroke
67 0 3924 1987 2 MP stroke
0 16 4520 730 2 MP stroke
67 0 4487 730 2 MP stroke
67 0 4487 746 2 MP stroke
562 -1224 563 -533 563 -313 562 -221 563 -26 563 -8 1144 3062 7 MP stroke
/c12 { 1.000000 0.000000 1.000000 sr} bdef
c12
0 119 1144 2973 2 MP stroke
68 0 1110 2973 2 MP stroke
68 0 1110 3092 2 MP stroke
0 115 1707 2986 2 MP stroke
68 0 1673 2986 2 MP stroke
68 0 1673 3101 2 MP stroke
0 139 2270 2922 2 MP stroke
67 0 2236 2922 2 MP stroke
67 0 2236 3061 2 MP stroke
0 125 2832 2710 2 MP stroke
67 0 2799 2710 2 MP stroke
67 0 2799 2835 2 MP stroke
0 72 3395 2424 2 MP stroke
68 0 3361 2424 2 MP stroke
68 0 3361 2496 2 MP stroke
0 49 3958 1861 2 MP stroke
67 0 3924 1861 2 MP stroke
67 0 3924 1910 2 MP stroke
0 53 4520 591 2 MP stroke
67 0 4487 591 2 MP stroke
67 0 4487 644 2 MP stroke
562 -1263 563 -583 563 -287 562 -259 563 -26 563 -13 1144 3055 7 MP stroke
gr

c12
0 sg
2154 3638 mt 
(Iterations \(log\(1\)\)) s
 306 2207 mt  -90 rotate
(Time \(log\(ms\)\)) s
90 rotate
2040  187 mt 
(My malloc with first fit) s
 639 3393 mt 
( ) s
4550  324 mt 
( ) s
1 sg
0 1050 1134 0 0 -1050 2616 1581 4 MP
PP
-1134 0 0 1050 1134 0 0 -1050 2616 1581 5 MP stroke
4 w
DO
SO
6 w
0 sg
2616  531 mt 3750  531 L
2616 1581 mt 3750 1581 L
3750 1581 mt 3750  531 L
2616 1581 mt 2616  531 L
2616 1581 mt 3750 1581 L
2616 1581 mt 2616  531 L
2616  531 mt 3750  531 L
2616 1581 mt 3750 1581 L
3750 1581 mt 3750  531 L
2616 1581 mt 2616  531 L
3084  678 mt 
(0% realloc) s
gs 2616 531 1135 1051 rc
c8
360 0 2688 636 2 MP stroke
gr

c8
0 sg
3084  846 mt 
(10% realloc) s
gs 2616 531 1135 1051 rc
c9
360 0 2688 803 2 MP stroke
gr

c9
0 sg
3084 1014 mt 
(20% realloc) s
gs 2616 531 1135 1051 rc
c10
360 0 2688 971 2 MP stroke
gr

c10
0 sg
3084 1183 mt 
(30% realloc) s
gs 2616 531 1135 1051 rc
c11
360 0 2688 1139 2 MP stroke
gr

c11
0 sg
3084 1351 mt 
(40% realloc) s
gs 2616 531 1135 1051 rc
360 0 2688 1307 2 MP stroke
gr

3084 1519 mt 
(50% realloc) s
gs 2616 531 1135 1051 rc
c12
360 0 2688 1475 2 MP stroke
gr

c12

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
